import { Pool } from "pg";
import * as O from "fp-ts/Option";
import * as T from "fp-ts/lib/Task";
import * as TE from "fp-ts/lib/TaskEither";
import { User } from "../../model";
export declare const migrate: (pool: Pool) => T.Task<boolean>;
export declare const rollback: (pool: Pool) => T.Task<boolean>;
export declare const all: (pool: Pool) => () => TE.TaskEither<Error, User.Internal.t[]>;
export declare const byId: (pool: Pool) => (id: string) => TE.TaskEither<Error, O.Option<User.Internal.t>>;
export declare const byEmail: (pool: Pool) => (email: string) => TE.TaskEither<Error, O.Option<User.Internal.t>>;
export declare const deleteById: (pool: Pool) => (id: string) => TE.TaskEither<Error, void>;
export declare const create: (pool: Pool) => (user: User.Frontend.Create.t) => TE.TaskEither<Error, User.Internal.t>;
export declare const setRole: (pool: Pool) => (role: string) => (id: string) => TE.TaskEither<Error, User.Internal.t>;
